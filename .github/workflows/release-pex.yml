name: release-pex

on:
  push:
    tags: ["v*.*.*"]
  workflow_dispatch: {}

permissions:
  contents: write  # needed to create a GitHub Release

jobs:
  pex:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
        py: ["3.11"]
    runs-on: ${{ matrix.os }}
    env:
      PEX_VERBOSE: "9"
      PEX_PIP_VERSION: "latest"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Build wheel
        run: |
          python -m pip install -U pip build pex
          python -m build --wheel
      - name: Build PEX
        shell: bash
        run: |
          case "${{ runner.os }}" in
            macOS)   OUT="k2p-macos-$(uname -m).pex" ;;
            Windows) OUT="k2p-windows.pex" ;;
            Linux)   OUT="k2p-linux.pex" ;;
          esac
          pex dist/*.whl -c k2p -o "dist/${OUT}" \
            --venv prepend --strip-pex-env \
            --interpreter-constraint 'CPython==3.11.*'
      - uses: actions/upload-artifact@v4
        with:
          name: pex-${{ runner.os }}
          path: dist/*.pex

  release:
    needs: pex
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Choose a tag: use the pushed tag, or make a nightly tag on manual run
      - name: Compute tag
        id: tag
        run: |
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            echo "TAG=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
            echo "PRERELEASE=false" >> "$GITHUB_OUTPUT"
          else
            echo "TAG=nightly-$(date +%Y%m%d%H%M%S)" >> "$GITHUB_OUTPUT"
            echo "PRERELEASE=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.TAG }}
          prerelease: ${{ steps.tag.outputs.PRERELEASE }}
          files: artifacts/**/*

