name: release-pex

on:
  push:
    tags: ["v*.*.*"]
  workflow_dispatch: {}

jobs:
  pex:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
        py: ["3.11"]
    runs-on: ${{ matrix.os }}
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_INPUT: "1"
      PEX_VERBOSE: "9"
      PEX_PIP_VERSION: "latest"   # <- make PEX resolve with a modern pip
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build pex

      - name: Build project wheel
        run: |
          python -m build --wheel
          ls -l dist

      - name: Build PEX
        shell: bash
        run: |
          case "${{ runner.os }}" in
            macOS)
              ARCH="$(uname -m)"
              OUT="k2p-macos-${ARCH}.pex"
              ;;
            Windows) OUT="k2p-windows.pex" ;;
            Linux)   OUT="k2p-linux.pex" ;;
          esac

          # 3.11 only, so PEX doesnâ€™t try to resolve for the system 3.12 too
          pex dist/*.whl \
            -c k2p \
            -o "dist/${OUT}" \
            --venv prepend \
            --strip-pex-env \
            --interpreter-constraint 'CPython==3.11.*'

          echo "Produced dist/${OUT}"
          ls -l dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pex-${{ runner.os }}
          path: dist/*.pex

  release:
    needs: pex
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: artifacts/**/*
          generate_release_notes: true
