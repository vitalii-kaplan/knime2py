[project]
name = "knime2py"
version = "0.1.9"
description = "KNIME → Python workbook converter (graphs, DOT, and ipynb/py emitters)"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Vitalii Kaplan", email = "vitalii.v.kaplan@gmail.com" }]

# Only what the CLI needs at runtime.
dependencies = [
  "lxml>=4.9,<6",
  "jinja2>=3.1,<4",
  "networkx>=3.2,<4",
  "packaging>=23,<25",
]

[project.optional-dependencies]
dev = [
  "pytest>=8",
  "pytest-cov>=5",
]

# RAG tooling – keep protobuf + tenacity conservative to avoid clobbering TF/Streamlit envs.
rag = [
  "sentence-transformers>=2.6,<3",
  "chromadb>=0.5",
  "python-dotenv>=1.0",
  "requests>=2.32",
  "protobuf<5",     # <- prevents upgrade to v6 that breaks TF/Streamlit stacks
  "tenacity<9",     # <- streamlit<1.33 expects <9; avoids pulling 9.x
]

# Graph rendering only:
viz = ["graphviz>=0.20"]

# Heavy scientific stack used by examples/notebooks, not the CLI.
# Add protobuf<5 for coexistence with TF/Streamlit; it won’t be used directly here.
ml-examples = [
  "pandas>=1.5,<3.0",
  "numpy>=1.23,<2.0",
  "scipy>=1.10,<1.13",
  "scikit-learn>=1.4.2,<1.6",
  "imbalanced-learn>=0.12.3,<0.13",
  "matplotlib>=3.6",
  "protobuf<5",
]

[project.scripts]
k2p = "knime2py.cli:main"
knime2py = "knime2py.cli:main"

[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/knime2py"]

[tool.pytest.ini_options]
addopts = "--cov=src/knime2py --cov-branch --cov-report=term-missing --cov-report=xml:coverage.xml"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src/knime2py"]

[tool.coverage.report]
show_missing = true
skip_empty = true

[tool.coverage.xml]
output = "coverage.xml"
